---
description: 
globs: 
alwaysApply: false
---
# Cursor Rules: 对话文档生成规则

## 目标
每次对话结束后，自动生成一份面向非技术人员的 Markdown 文档，包含完整的实操步骤和参考资料。

## 文档结构要求

### 1. 内容组织
```
# [技术主题名称]

## 概述
[用通俗语言解释这个技术是什么，解决什么问题]

## 前置条件
- [列出需要的软件、账号等]
- [版本要求]

## 详细步骤

### 步骤 1: [具体操作名称]
1. [具体操作步骤]
2. [截图或代码示例]
3. [预期结果]

### 步骤 2: [具体操作名称]
...

## 验证方法
[如何确认操作成功]

## 常见问题
**Q: [常见问题]**
A: [详细解答]

## 参考资料
- [官方文档链接]
- [相关教程链接]
- [社区讨论链接]

## 下一步学习
[建议的进阶学习方向]
```

## 内容要求

### 1. 语言风格
- 使用通俗易懂的语言
- 避免技术黑话
- 每个概念都要有解释
- 使用类比和比喻

### 2. 步骤描述
- 每个步骤都要具体可操作
- 包含完整的命令和配置
- 提供预期结果
- 标注重要注意事项

### 3. 示例要求
- 提供完整的代码示例
- 包含配置文件内容
- 展示目录结构
- 提供截图说明

### 4. 安全考虑
- 提醒敏感信息保护
- 说明 .gitignore 配置
- 环境变量使用说明
- 权限设置指导

## 特殊规则

### 1. 环境配置类
- 必须包含安装命令
- 版本兼容性说明
- 环境变量配置
- 配置文件位置
- .gitignore 更新

### 2. 代码实现类
- 完整的代码示例
- 依赖安装说明
- 运行和测试方法
- 错误处理指导

### 3. 部署发布类
- 完整的部署流程
- 环境要求
- 监控和维护
- 回滚方案



## 示例模板

以"Node.js 项目接入 dotenv 环境变量管理"为例：

```markdown
# Node.js 项目接入 dotenv 环境变量管理

## 概述
dotenv 是一个用于管理环境变量的工具，可以让我们把敏感信息（如数据库密码、API密钥）从代码中分离出来，提高安全性。

## 前置条件
- 已安装 Node.js（版本 14.0 或以上）
- 有一个 Node.js 项目

## 详细步骤

### 步骤 1: 安装 dotenv 包
1. 打开终端，进入项目目录
2. 执行安装命令：
   ```bash
   npm install dotenv
```
3. 预期结果：看到 `dotenv` 出现在 `package.json` 的 `dependencies` 中

### 步骤 2: 创建环境变量文件
1. 在项目根目录创建 `.env` 文件
2. 在文件中添加环境变量：
   ```
   DATABASE_URL=mongodb://localhost:27017/mydb
   API_KEY=your_secret_api_key
   PORT=3000
   ```
3. 注意：不要使用引号包围值

### 步骤 3: 配置 .gitignore
1. 打开项目根目录的 `.gitignore` 文件
2. 添加以下内容：
   ```
   .env
   .env.local
   .env.*.local
   ```
3. 这样做的原因：防止敏感信息被提交到代码仓库

### 步骤 4: 在代码中使用
1. 在项目的主文件（如 `app.js` 或 `index.js`）顶部添加：
   ```javascript
   require('dotenv').config();
   ```
2. 然后就可以使用环境变量：
   ```javascript
   const port = process.env.PORT || 3000;
   const dbUrl = process.env.DATABASE_URL;
   ```

## 验证方法
1. 启动项目：`node app.js`
2. 检查控制台输出，确认环境变量被正确读取
3. 确认 `.env` 文件没有被 Git 跟踪（执行 `git status` 查看）

## 常见问题
**Q: 为什么我的环境变量读取不到？**
A: 确保在代码最开始就调用了 `require('dotenv').config()`，并且 `.env` 文件在项目根目录。

**Q: 可以创建多个环境文件吗？**
A: 可以，比如 `.env.development`、`.env.production`，但需要在代码中指定文件名。

## 参考资料
- [dotenv 官方文档](mdc:https:/github.com/motdotla/dotenv)
- [Node.js 环境变量最佳实践](mdc:https:/nodejs.org/en/docs/guides/environment-variables)
- [Git 忽略文件配置](mdc:https:/git-scm.com/docs/gitignore)

## 下一步学习
- 学习使用 `dotenv-expand` 进行变量扩展
- 了解不同环境的配置管理
- 学习使用 `config` 库进行更复杂的配置管理
```

## 执行指令
每次对话结束后，请按照以上规则和模板，将对话内容整理成一份完整的 Markdown 文档，确保非技术人员也能按照步骤成功操作。